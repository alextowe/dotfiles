# set mod keys
set $mod Mod4

# set colors from xresources
set $transparent #00000000
set_from_resource $focused 		color3 		#000000     	
set_from_resource $unfocused   	color0		#000000         	
set_from_resource $bg 			background 	#000000
set_from_resource $fg 			foreground 	#000000
set_from_resource $text0		color7		#000000 	
set_from_resource $text1		color6		#000000 	

# set colors for window titles and borders
#                       border      background	text 	indicator	child_border
client.focused          $focused 	$focused 	$text0 	$focused 	$focused 	
client.focused_inactive $unfocused	$unfocused	$text1	$unfocused	$unfocused
client.unfocused        $unfocused	$unfocused	$text1	$unfocused	$unfocused
client.urgent           $fg			$fg			$bg		$fg			$fg
client.placeholder		$unfocused	$unfocused	$text1	$unfocused	$unfocused
client.background       $background

# set font for window titles and i3bar
font pango:Terminus 10

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# set background image
exec --no-startup-id feh --bg-fill $HOME/.config/background.png

# enable floating for certain windows/applications
for_window [class="floating"] floating enable, border normal, resize set 1200 700, move position center
for_window [class="feh"] floating enable, border normal, move position center
for_window [class="vlc"] floating enable, border normal, move position center
for_window [class="Pavucontrol"] floating enable, border normal, resize set 500 500, move position center
#for_window [class="^Steam$" title="^Friends List$"] floating enable, move position center
for_window [class="^Steam$" title="^Music Player$"] floating enable, move position center
for_window [class="^Steam$" title="^Servers$"] floating enable, move position center
for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable, move position center
for_window [class="^Steam$" title="^Steam - News$"] floating enable, move position center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# applications keybinds
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec kitty --class floating
bindsym $mod+Shift+a exec pavucontrol
bindsym $mod+b exec kitty --class floating ranger
bindsym $mod+Shift+f exec firefox
bindsym $mod+F2 exec discord 

# kill focused window
bindsym $mod+q kill

# start rofi
bindsym $mod+space exec "rofi -modi drun,run -show drun"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+x split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+w floating toggle

# change focus between tiling / floating windows
bindsym $mod+w focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2" 
set $ws3 "3" 
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9" 
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# define variables for monitors
set $monitor0 "DP-4"
set $monitor1 "HDMI-0"

# assign workspaces to monitors 
workspace 1 output $monitor0
workspace 2 output $monitor0
workspace 3 output $monitor0
workspace 4 output $monitor0
workspace 8 output $monitor0
workspace 9 output $monitor1
workspace 10 output $monitor1

# create workspaces 
exec $HOME/bin/create-workspaces

# assign applications to specific workspaces
assign [class="^Steam$"] $ws8
assign [class="^discord$"] $ws9

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# power/exit/lock menu
set $mode_system (l)ock | (s)uspend | (e)xit | (r)eboot | (p)oweroff | (h)ibernate
set $lock light-locker-command --lock
set $suspend systemctl suspend
set $exit i3-msg exit
set $reboot systemctl reboot
set $poweroff systemctl poweroff -i
set $hibernate systemctl hibernate

mode "$mode_system" {
	bindsym l exec --no-startup-id $lock, mode "default"
	bindsym s exec --no-startup-id $lock && $suspend, mode "default" 
	bindsym e exec --no-startup-id $exit, mode "default" 
	bindsym r exec --no-startup-id $reboot, mode "default" 
	bindsym p exec --no-startup-id $poweroff, mode "default" 
	bindsym h exec --no-startup-id $lock && $hibernate, mode "default" 

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# start i3bar and py3status
bar {
        status_command i3status
		separator_symbol " | "
		tray_output primary
		colors {
        		background	$bg
        		statusline	$text0
        		separator	$text0

				# i3bar colors 		border		background	text	
				focused_workspace	$focused	$focused	$text0 
        		active_workspace	$focused  	$unfocused	$text1 
        		inactive_workspace	$focused  	$unfocused  $text1 
				urgent_workspace    $fg			$fg			$bg
				binding_mode		$focused	$unfocused	$text1
		} 	

}		

# autostart applications
exec_always --no-startup-id /usr/bin/light-locker
exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id picom -b

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# gap settings
gaps inner 10px
smart_gaps on

